# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.

package liberty;
require Exporter;
require DynaLoader;
@ISA = qw(Exporter DynaLoader);
package libertyc;
bootstrap liberty;
package liberty;
@EXPORT = qw(lib_PIGetErrorText
lib_PICreateGroup
lib_GroupCreateAttr
lib_AttrGetAttrType
lib_AttrGetName
lib_ComplexAttrAddInt32Value
lib_ComplexAttrAddStringValue
lib_ComplexAttrAddBooleanValue
lib_ComplexAttrAddFloat64Value
lib_ComplexAttrAddExprValue
lib_ComplexAttrGetValues
lib_IterNextComplex
lib_ComplexValGetValueType
lib_ComplexValGetInt32Value
lib_ComplexValGetFloat64Value
lib_ComplexValGetStringValue
lib_ComplexValGetBooleanValue
lib_ComplexValGetExprValue
lib_SimpleAttrGetValueType
lib_SimpleAttrGetInt32Value
lib_SimpleAttrGetFloat64Value
lib_SimpleAttrGetStringValue
lib_SimpleAttrGetBooleanValue
lib_SimpleAttrGetExprValue
lib_SimpleAttrSetInt32Value
lib_SimpleAttrSetBooleanValue
lib_SimpleAttrSetFloat64Value
lib_SimpleAttrSetStringValue
lib_SimpleAttrSetExprValue
lib_SimpleAttrGetIsVar
lib_SimpleAttrSetIsVar
lib_ExprDestroy
lib_CreateExpr
lib_CreateBooleanValExpr
lib_CreateDoubleValExpr
lib_CreateStringValExpr
lib_CreateIntValExpr
lib_CreateBinaryOpExpr
lib_CreateUnaryOpExpr
lib_ExprToString
lib_ExprGetType
lib_ValExprGetValueType
lib_IntValExprGetInt
lib_DoubleValExprGetDouble
lib_BooleanValExprGetBoolean
lib_StringValExprGetString
lib_OpExprGetLeftExpr
lib_OpExprGetRightExpr
lib_GroupCreateDefine
lib_DefineGetInfo
lib_DefineGetName
lib_DefineGetAllowedGroupName
lib_DefineGetValueType
lib_GroupCreateGroup
lib_GroupGetGroupType
lib_GroupGetComment
lib_GroupSetComment
lib_AttrGetComment
lib_AttrSetComment
lib_DefineGetComment
lib_DefineSetComment
lib_GroupAddName
lib_GroupDeleteName
lib_PIFindGroupByName
lib_GroupFindGroupByName
lib_GroupFindAttrByName
lib_GroupFindDefineByName
lib_PIFindDefineByName
lib_PIGetGroups
lib_GroupGetGroups
lib_GroupGetNames
lib_GroupGetAttrs
lib_GroupGetDefines
lib_IterNextGroup
lib_IterNextName
lib_IterNextAttr
lib_IterNextDefine
lib_IterQuit
lib_ObjectDelete
lib_PIGetErrorText
lib_PIGetNullId
lib_PIInit
lib_PIQuit
lib_ObjectGetObjectType
lib_ObjectGetOwner
lib_ObjectIsNull
lib_ObjectIsSame
lib_ObjectIsUsable
lib_ObjectSetFileName
lib_ObjectSetLineNo
lib_ObjectGetLineNo
lib_ObjectGetFileName
lib_ReadLibertyFile
lib_WriteLibertyFile
lib_CheckLibertyLibrary
lib_PIGetTraceMode
lib_PIUnSetTraceMode
lib_PISetTraceMode
lib_PISetDebugMode
lib_PIUnSetDebugMode
lib_PIGetDebugMode
lib_PISetNocheckMode
lib_PIUnSetNocheckMode
lib_PIGetNocheckMode
lib_GroupMoveAfter
lib_GroupMoveBefore
);

# ---------- BASE METHODS -------------

package liberty;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package liberty;

*lib_PICreateGroup = *libertyc::si2drPICreateGroup;
*lib_GroupCreateAttr = *libertyc::si2drGroupCreateAttr;
*lib_AttrGetAttrType = *libertyc::si2drAttrGetAttrType;
*lib_AttrGetName = *libertyc::si2drAttrGetName;
*lib_ComplexAttrAddInt32Value = *libertyc::si2drComplexAttrAddInt32Value;
*lib_ComplexAttrAddStringValue = *libertyc::si2drComplexAttrAddStringValue;
*lib_ComplexAttrAddBooleanValue = *libertyc::si2drComplexAttrAddBooleanValue;
*lib_ComplexAttrAddFloat64Value = *libertyc::si2drComplexAttrAddFloat64Value;
*lib_ComplexAttrAddExprValue = *libertyc::si2drComplexAttrAddExprValue;
*lib_ComplexAttrGetValues = *libertyc::si2drComplexAttrGetValues;
*lib_IterNextComplex = *libertyc::si2drIterNextComplex;
*lib_ComplexValGetValueType = *libertyc::si2drComplexValGetValueType;
*lib_ComplexValGetInt32Value = *libertyc::si2drComplexValGetInt32Value;
*lib_ComplexValGetFloat64Value = *libertyc::si2drComplexValGetFloat64Value;
*lib_ComplexValGetStringValue = *libertyc::si2drComplexValGetStringValue;
*lib_ComplexValGetBooleanValue = *libertyc::si2drComplexValGetBooleanValue;
*lib_ComplexValGetExprValue = *libertyc::si2drComplexValGetExprValue;
*lib_SimpleAttrGetValueType = *libertyc::si2drSimpleAttrGetValueType;
*lib_SimpleAttrGetInt32Value = *libertyc::si2drSimpleAttrGetInt32Value;
*lib_SimpleAttrGetFloat64Value = *libertyc::si2drSimpleAttrGetFloat64Value;
*lib_SimpleAttrGetStringValue = *libertyc::si2drSimpleAttrGetStringValue;
*lib_SimpleAttrGetBooleanValue = *libertyc::si2drSimpleAttrGetBooleanValue;
*lib_SimpleAttrGetExprValue = *libertyc::si2drSimpleAttrGetExprValue;
*lib_SimpleAttrSetInt32Value = *libertyc::si2drSimpleAttrSetInt32Value;
*lib_SimpleAttrSetBooleanValue = *libertyc::si2drSimpleAttrSetBooleanValue;
*lib_SimpleAttrSetFloat64Value = *libertyc::si2drSimpleAttrSetFloat64Value;
*lib_SimpleAttrSetStringValue = *libertyc::si2drSimpleAttrSetStringValue;
*lib_SimpleAttrSetExprValue = *libertyc::si2drSimpleAttrSetExprValue;
*lib_SimpleAttrGetIsVar = *libertyc::si2drSimpleAttrGetIsVar;
*lib_SimpleAttrSetIsVar = *libertyc::si2drSimpleAttrSetIsVar;
*lib_ExprDestroy = *libertyc::si2drExprDestroy;
*lib_CreateExpr = *libertyc::si2drCreateExpr;
*lib_CreateBooleanValExpr = *libertyc::si2drCreateBooleanValExpr;
*lib_CreateDoubleValExpr = *libertyc::si2drCreateDoubleValExpr;
*lib_CreateStringValExpr = *libertyc::si2drCreateStringValExpr;
*lib_CreateIntValExpr = *libertyc::si2drCreateIntValExpr;
*lib_CreateBinaryOpExpr = *libertyc::si2drCreateBinaryOpExpr;
*lib_CreateUnaryOpExpr = *libertyc::si2drCreateUnaryOpExpr;
*lib_ExprToString = *libertyc::si2drExprToString;
*lib_ExprGetType = *libertyc::si2drExprGetType;
*lib_ValExprGetValueType = *libertyc::si2drValExprGetValueType;
*lib_IntValExprGetInt = *libertyc::si2drIntValExprGetInt;
*lib_DoubleValExprGetDouble = *libertyc::si2drDoubleValExprGetDouble;
*lib_BooleanValExprGetBoolean = *libertyc::si2drBooleanValExprGetBoolean;
*lib_StringValExprGetString = *libertyc::si2drStringValExprGetString;
*lib_OpExprGetLeftExpr = *libertyc::si2drOpExprGetLeftExpr;
*lib_OpExprGetRightExpr = *libertyc::si2drOpExprGetRightExpr;
*lib_GroupCreateDefine = *libertyc::si2drGroupCreateDefine;
*lib_DefineGetInfo = *libertyc::si2drDefineGetInfo;
*lib_DefineGetName = *libertyc::si2drDefineGetName;
*lib_DefineGetAllowedGroupName = *libertyc::si2drDefineGetAllowedGroupName;
*lib_DefineGetValueType = *libertyc::si2drDefineGetValueType;
*lib_GroupCreateGroup = *libertyc::si2drGroupCreateGroup;
*lib_GroupGetGroupType = *libertyc::si2drGroupGetGroupType;
*lib_GroupGetComment = *libertyc::si2drGroupGetComment;
*lib_GroupSetComment = *libertyc::si2drGroupSetComment;
*lib_AttrGetComment = *libertyc::si2drAttrGetComment;
*lib_AttrSetComment = *libertyc::si2drAttrSetComment;
*lib_DefineGetComment = *libertyc::si2drDefineGetComment;
*lib_DefineSetComment = *libertyc::si2drDefineSetComment;
*lib_GroupAddName = *libertyc::si2drGroupAddName;
*lib_GroupDeleteName = *libertyc::si2drGroupDeleteName;
*lib_PIFindGroupByName = *libertyc::si2drPIFindGroupByName;
*lib_GroupFindGroupByName = *libertyc::si2drGroupFindGroupByName;
*lib_GroupFindAttrByName = *libertyc::si2drGroupFindAttrByName;
*lib_GroupFindDefineByName = *libertyc::si2drGroupFindDefineByName;
*lib_PIFindDefineByName = *libertyc::si2drPIFindDefineByName;
*lib_PIGetGroups = *libertyc::si2drPIGetGroups;
*lib_GroupGetGroups = *libertyc::si2drGroupGetGroups;
*lib_GroupGetNames = *libertyc::si2drGroupGetNames;
*lib_GroupGetAttrs = *libertyc::si2drGroupGetAttrs;
*lib_GroupGetDefines = *libertyc::si2drGroupGetDefines;
*lib_IterNextGroup = *libertyc::si2drIterNextGroup;
*lib_IterNextName = *libertyc::si2drIterNextName;
*lib_IterNextAttr = *libertyc::si2drIterNextAttr;
*lib_IterNextDefine = *libertyc::si2drIterNextDefine;
*lib_IterQuit = *libertyc::si2drIterQuit;
*lib_ObjectDelete = *libertyc::si2drObjectDelete;
*lib_PIGetErrorText = *libertyc::si2drPIGetErrorText;
*lib_PIGetNullId = *libertyc::si2drPIGetNullId;
*lib_PIInit = *libertyc::si2drPIInit;
*lib_PIQuit = *libertyc::si2drPIQuit;
*lib_ObjectGetObjectType = *libertyc::si2drObjectGetObjectType;
*lib_ObjectGetOwner = *libertyc::si2drObjectGetOwner;
*lib_ObjectIsNull = *libertyc::si2drObjectIsNull;
*lib_ObjectIsSame = *libertyc::si2drObjectIsSame;
*lib_ObjectIsUsable = *libertyc::si2drObjectIsUsable;
*lib_ObjectSetFileName = *libertyc::si2drObjectSetFileName;
*lib_ObjectSetLineNo = *libertyc::si2drObjectSetLineNo;
*lib_ObjectGetLineNo = *libertyc::si2drObjectGetLineNo;
*lib_ObjectGetFileName = *libertyc::si2drObjectGetFileName;
*lib_ReadLibertyFile = *libertyc::si2drReadLibertyFile;
*lib_WriteLibertyFile = *libertyc::si2drWriteLibertyFile;
*lib_CheckLibertyLibrary = *libertyc::si2drCheckLibertyLibrary;
*lib_PIGetTraceMode = *libertyc::si2drPIGetTraceMode;
*lib_PIUnSetTraceMode = *libertyc::si2drPIUnSetTraceMode;
*lib_PISetTraceMode = *libertyc::si2drPISetTraceMode;
*lib_PISetDebugMode = *libertyc::si2drPISetDebugMode;
*lib_PIUnSetDebugMode = *libertyc::si2drPIUnSetDebugMode;
*lib_PIGetDebugMode = *libertyc::si2drPIGetDebugMode;
*lib_PISetNocheckMode = *libertyc::si2drPISetNocheckMode;
*lib_PIUnSetNocheckMode = *libertyc::si2drPIUnSetNocheckMode;
*lib_PIGetNocheckMode = *libertyc::si2drPIGetNocheckMode;
*lib_GroupMoveAfter = *libertyc::si2drGroupMoveAfter;
*lib_GroupMoveBefore = *libertyc::si2drGroupMoveBefore;

*liberty_get_element = *libertyc::liberty_get_element;
*liberty_destroy_value_data = *libertyc::liberty_destroy_value_data;
*liberty_get_values_data = *libertyc::liberty_get_values_data;

############# Class : liberty::si2ObjectIdT ##############

package liberty::si2ObjectIdT;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( liberty );
%OWNER = ();
%ITERATORS = ();
*swig_v1_get = *libertyc::si2ObjectIdT_v1_get;
*swig_v1_set = *libertyc::si2ObjectIdT_v1_set;
*swig_v2_get = *libertyc::si2ObjectIdT_v2_get;
*swig_v2_set = *libertyc::si2ObjectIdT_v2_set;
sub new {
    my $pkg = shift;
    my $self = libertyc::new_si2ObjectIdT(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        libertyc::delete_si2ObjectIdT($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : liberty::si2drExprT ##############

package liberty::si2drExprT;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( liberty );
%OWNER = ();
%ITERATORS = ();
*swig_type_get = *libertyc::si2drExprT_type_get;
*swig_type_set = *libertyc::si2drExprT_type_set;
*swig_valuetype_get = *libertyc::si2drExprT_valuetype_get;
*swig_valuetype_set = *libertyc::si2drExprT_valuetype_set;
*swig_left_get = *libertyc::si2drExprT_left_get;
*swig_left_set = *libertyc::si2drExprT_left_set;
*swig_right_get = *libertyc::si2drExprT_right_get;
*swig_right_set = *libertyc::si2drExprT_right_set;
*swig_u_get = *libertyc::si2drExprT_u_get;
*swig_u_set = *libertyc::si2drExprT_u_set;
sub new {
    my $pkg = shift;
    my $self = libertyc::new_si2drExprT(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        libertyc::delete_si2drExprT($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : liberty::si2drExprT_u ##############

package liberty::si2drExprT_u;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( liberty );
%OWNER = ();
%ITERATORS = ();
*swig_i_get = *libertyc::si2drExprT_u_i_get;
*swig_i_set = *libertyc::si2drExprT_u_i_set;
*swig_d_get = *libertyc::si2drExprT_u_d_get;
*swig_d_set = *libertyc::si2drExprT_u_d_set;
*swig_s_get = *libertyc::si2drExprT_u_s_get;
*swig_s_set = *libertyc::si2drExprT_u_s_set;
*swig_b_get = *libertyc::si2drExprT_u_b_get;
*swig_b_set = *libertyc::si2drExprT_u_b_set;
sub new {
    my $pkg = shift;
    my $self = libertyc::new_si2drExprT_u(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        libertyc::delete_si2drExprT_u($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : liberty::liberty_value_data ##############

package liberty::liberty_value_data;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( liberty );
%OWNER = ();
%ITERATORS = ();
*swig_dimensions_get = *libertyc::liberty_value_data_dimensions_get;
*swig_dimensions_set = *libertyc::liberty_value_data_dimensions_set;
*swig_dim_sizes_get = *libertyc::liberty_value_data_dim_sizes_get;
*swig_dim_sizes_set = *libertyc::liberty_value_data_dim_sizes_set;
*swig_index_info_get = *libertyc::liberty_value_data_index_info_get;
*swig_index_info_set = *libertyc::liberty_value_data_index_info_set;
*swig_values_get = *libertyc::liberty_value_data_values_get;
*swig_values_set = *libertyc::liberty_value_data_values_set;
sub new {
    my $pkg = shift;
    my $self = libertyc::new_liberty_value_data(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        libertyc::delete_liberty_value_data($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


# ------- VARIABLE STUBS --------

package liberty;

*SI2_FALSE = *libertyc::SI2_FALSE;
*SI2_TRUE = *libertyc::SI2_TRUE;
*SI2_UNDEFINED_VALUETYPE = *libertyc::SI2_UNDEFINED_VALUETYPE;
*SI2_BOOLEAN = *libertyc::SI2_BOOLEAN;
*SI2_LONG = *libertyc::SI2_LONG;
*SI2_FLOAT = *libertyc::SI2_FLOAT;
*SI2_DOUBLE = *libertyc::SI2_DOUBLE;
*SI2_STRING = *libertyc::SI2_STRING;
*SI2_VOID = *libertyc::SI2_VOID;
*SI2_OID = *libertyc::SI2_OID;
*SI2_ITER = *libertyc::SI2_ITER;
*SI2_EXPR = *libertyc::SI2_EXPR;
*SI2_MAX_VALUETYPE = *libertyc::SI2_MAX_VALUETYPE;
*SI2_LONG_MAX = *libertyc::SI2_LONG_MAX;
*SI2_LONG_MIN = *libertyc::SI2_LONG_MIN;
*SI2_ULONG_MAX = *libertyc::SI2_ULONG_MAX;
*SI2DR_MIN_FLOAT32 = *libertyc::SI2DR_MIN_FLOAT32;
*SI2DR_MAX_FLOAT32 = *libertyc::SI2DR_MAX_FLOAT32;
*SI2DR_MIN_FLOAT64 = *libertyc::SI2DR_MIN_FLOAT64;
*SI2DR_MAX_FLOAT64 = *libertyc::SI2DR_MAX_FLOAT64;
*SI2DR_MIN_INT32 = *libertyc::SI2DR_MIN_INT32;
*SI2DR_MAX_INT32 = *libertyc::SI2DR_MAX_INT32;
*SI2DR_SEVERITY_NOTE = *libertyc::SI2DR_SEVERITY_NOTE;
*SI2DR_SEVERITY_WARN = *libertyc::SI2DR_SEVERITY_WARN;
*SI2DR_SEVERITY_ERR = *libertyc::SI2DR_SEVERITY_ERR;
*SI2DR_UNDEFINED_OBJECTTYPE = *libertyc::SI2DR_UNDEFINED_OBJECTTYPE;
*SI2DR_GROUP = *libertyc::SI2DR_GROUP;
*SI2DR_ATTR = *libertyc::SI2DR_ATTR;
*SI2DR_DEFINE = *libertyc::SI2DR_DEFINE;
*SI2DR_MAX_OBJECTTYPE = *libertyc::SI2DR_MAX_OBJECTTYPE;
*SI2DR_SIMPLE = *libertyc::SI2DR_SIMPLE;
*SI2DR_COMPLEX = *libertyc::SI2DR_COMPLEX;
*SI2DR_UNDEFINED_VALUETYPE = *libertyc::SI2DR_UNDEFINED_VALUETYPE;
*SI2DR_INT32 = *libertyc::SI2DR_INT32;
*SI2DR_STRING = *libertyc::SI2DR_STRING;
*SI2DR_FLOAT64 = *libertyc::SI2DR_FLOAT64;
*SI2DR_BOOLEAN = *libertyc::SI2DR_BOOLEAN;
*SI2DR_EXPR = *libertyc::SI2DR_EXPR;
*SI2DR_MAX_VALUETYPE = *libertyc::SI2DR_MAX_VALUETYPE;
*SI2DR_EXPR_VAL = *libertyc::SI2DR_EXPR_VAL;
*SI2DR_EXPR_OP_ADD = *libertyc::SI2DR_EXPR_OP_ADD;
*SI2DR_EXPR_OP_SUB = *libertyc::SI2DR_EXPR_OP_SUB;
*SI2DR_EXPR_OP_MUL = *libertyc::SI2DR_EXPR_OP_MUL;
*SI2DR_EXPR_OP_DIV = *libertyc::SI2DR_EXPR_OP_DIV;
*SI2DR_EXPR_OP_PAREN = *libertyc::SI2DR_EXPR_OP_PAREN;
*SI2DR_EXPR_OP_LOG2 = *libertyc::SI2DR_EXPR_OP_LOG2;
*SI2DR_EXPR_OP_LOG10 = *libertyc::SI2DR_EXPR_OP_LOG10;
*SI2DR_EXPR_OP_EXP = *libertyc::SI2DR_EXPR_OP_EXP;
*SI2DR_NO_ERROR = *libertyc::SI2DR_NO_ERROR;
*SI2DR_INTERNAL_SYSTEM_ERROR = *libertyc::SI2DR_INTERNAL_SYSTEM_ERROR;
*SI2DR_INVALID_VALUE = *libertyc::SI2DR_INVALID_VALUE;
*SI2DR_INVALID_NAME = *libertyc::SI2DR_INVALID_NAME;
*SI2DR_INVALID_OBJECTTYPE = *libertyc::SI2DR_INVALID_OBJECTTYPE;
*SI2DR_INVALID_ATTRTYPE = *libertyc::SI2DR_INVALID_ATTRTYPE;
*SI2DR_UNUSABLE_OID = *libertyc::SI2DR_UNUSABLE_OID;
*SI2DR_OBJECT_ALREADY_EXISTS = *libertyc::SI2DR_OBJECT_ALREADY_EXISTS;
*SI2DR_OBJECT_NOT_FOUND = *libertyc::SI2DR_OBJECT_NOT_FOUND;
*SI2DR_SYNTAX_ERROR = *libertyc::SI2DR_SYNTAX_ERROR;
*SI2DR_TRACE_FILES_CANNOT_BE_OPENED = *libertyc::SI2DR_TRACE_FILES_CANNOT_BE_OPENED;
*SI2DR_PIINIT_NOT_CALLED = *libertyc::SI2DR_PIINIT_NOT_CALLED;
*SI2DR_SEMANTIC_ERROR = *libertyc::SI2DR_SEMANTIC_ERROR;
*SI2DR_REFERENCE_ERROR = *libertyc::SI2DR_REFERENCE_ERROR;
*SI2DR_MAX_ERROR = *libertyc::SI2DR_MAX_ERROR;
1;
